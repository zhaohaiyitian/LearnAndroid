plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-kapt")
//    id ("com.google.protobuf")
//    id("customPlugin")
}

android {
    namespace = "com.jack.learn"
    compileSdk = 32

    defaultConfig {
        applicationId = "com.jack.learn"
        minSdk = 26
        targetSdk = 32
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a", "arm64-v8a", "x86"
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    sourceSets {
        main.res.srcDirs = ['src/main/res',
                            'src/main/res/layouts',
                            'src/main/res/layouts/contact',
                            'src/main/res/layouts/gesture',
                            'src/main/res/layouts/traderpw',
                            'src/main/res/layouts/bankcard']
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        aidl = true
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.3.2"
    }

    // 代表jni工程
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}
// 禁用kapt 提升编译速度
tasks.whenTaskAdded { task ->
    println("wangjie:"+task)
    if (task.name.contains("kapt")) {
        task.enabled = false
    }
}

//protobuf {
//    // 配置proto编译器
//    protoc {
//        artifact = 'com.google.protobuf:protoc:3.11.0'
//    }
//    // 这里配置生成目录，编译后会在build的目录下生成对应的java文件
//    generateProtoTasks {
//        all().each { task ->
//            task.builtins {
//                remove java
////                remove python
//            }
//            task.builtins {
//                java {}
////                python{}
//            }
//        }
//    }
//    //generatedFilesBaseDir = "$projectDir/src/wangjie"
//}

dependencies {

    implementation("androidx.core:core-ktx:1.8.0")
    implementation("com.google.android.material:material:1.6.0")
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")

    implementation project(':flutter')
    implementation project(':skin_core')
    implementation project(path: ':shadowcore')

    // 协程
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    // viewModelScope
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha03"

    // lifecycleScope
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha03"

    // Paging3
    implementation 'androidx.paging:paging-runtime:3.1.1'

    // room
    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Proto DataStore
//    implementation "androidx.datastore:datastore-core:1.1.1"

    // navigation
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'

    // workmanager
    implementation "androidx.work:work-runtime:2.3.4"

    // mmkv
    implementation 'com.tencent:mmkv:1.3.3'

    // asyncLayoutInflater
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:3.0-alpha-1'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    // protobuf
//    implementation 'com.google.protobuf:protobuf-java:3.11.0'

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'

    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //  stetho 网络调试
    implementation 'com.facebook.stetho:stetho-okhttp3:1.6.0'

    //koom
    implementation "com.kuaishou.koom:koom-java-leak:2.2.0"

    // mqtt
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    // gson
    implementation 'com.google.code.gson:gson:2.11.0'

    //下拉刷新
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"

    // 环信
    implementation 'io.hyphenate:hyphenate-chat:3.9.4'

    // compose
    implementation('androidx.activity:activity-compose:1.3.0')
    implementation('androidx.compose.ui:ui-tooling:1.2.0')
    implementation('androidx.compose.ui:ui:1.2.0')
    implementation('androidx.compose.material:material:1.2.0')
    implementation('androidx.compose.ui:ui-tooling-preview:1.2.0')



    implementation  'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    implementation  'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
    implementation  'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载
//
//    // ARouter
//    implementation 'com.alibaba:arouter-api:1.5.2'
//    kapt 'com.alibaba:arouter-compiler:1.5.2'
}