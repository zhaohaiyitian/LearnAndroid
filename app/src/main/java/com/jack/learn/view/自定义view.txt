




   画圆角
   imageView.outlineProvider = object : ViewOutlineProvider() {
              override fun getOutline(view: View, outline: Outline) {
                  // 设置按钮圆角率为30
                  outline.setRoundRect(0,0,view.width,view.height,100f)
                  // 设置按钮为圆形
                  outline.setOval(0,0,view.width,view.height)
              }
          }
            imageView.clipToOutline = true



   int save = canvas.save(); // 用于保存Canvas的当前状态,每次调用save()时，当前的绘制状态就会被压入一个状态堆栈中
          canvas.restore(); // 它将从状态堆栈中弹出最上面的状态，并应用于Canvas

首先保存了 Canvas 的状态，然后进行了一些绘制和变换操作，
最后恢复到保存的状态并继续绘制其他图形。这样可以确保不同部分的绘制相互独立，不会相互影响



在Android中Surface是从Object派生而来，且实现了Parcelable接口。看到Parcelable就让人能很自然地想到数据容器，SurfaceView就是用来展示Surface中的数据的。
在这个层面上而言，Surface就是管理数据的地方，SurfaceView就是展示数据的地方。

SurfaceHolder是一个接口，其作用就像一个关于Surface的监听器。它通过三个回调方法，让我们可以感知到Surface的创建、销毁或者改变。