




内存泄露
原因：长生命周期的对象引用了短生命周期的对象
产生场景：
1.Handler，Thread
非静态的Handler/Thread持有了Activity的引用
解决方案：
 清空Handler中未执行或正在执行的Callback以及Message
 采用静态内部类+弱引用的写法
2.单例模式
单例持有了Activity的引用
3.监听器用完没有解注册
4.文件流没有关闭
5.动画资源启动后没有停止
6.集合使用完毕之后，需要对集合以及集合内元素进行置空
7.动画监听及时移除
内存抖动
解决方案：
 对象池
 链表：使用场景是对象无差异性
 map：复用是有条件的，对象是有差异性的


内存溢出
fd数量过多
线程数量过多
没有连续的内存空间

